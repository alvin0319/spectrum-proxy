name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Make install-deps.sh executable
        run: chmod +x install-deps.sh

      - name: Install dependencies
        run: ./install-deps.sh

      - name: Build project
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then
            go build o spectrum-proxy-${{ matrix.goos }}-${{ matrix.goarch }}.exe
          else
            go build -o spectrum-proxy-${{ matrix.goos }}-${{ matrix.goarch }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spectrum-proxy-${{ matrix.goos }}-${{ matrix.goarch }}
          path: spectrum-proxy-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            spectrum-proxy-*/spectrum-proxy-*
          generate_release_notes: true
          tag_name: ${{ github.event_name == 'workflow_dispatch' && format('manual-{0}', github.run_number) || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}